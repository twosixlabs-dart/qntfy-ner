openapi: 3.0.1
info:
  title: Qntfy NER analytic
  description: 'This is an API spec for the Qntfy NER analytic.  You can find out
    more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api key
    `special-key` to test the authorization     filters.'
  contact:
    email: max@qntfy.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /api/v1
tags:
- name: cdr
  description: API methods for dealing with the CDR schema
  externalDocs:
    description: CDR schema
    url: https://github.com/reynoldsm88/Document-Schema
- name: annotate
  description: API methods for dealing with text inputs
- name: health
  description: API methods for interrogating status of the server
paths:
  /annotate/cdr:
    post:
      tags:
      - cdr
      - annotate
      summary: Annotate a CDR document
      description: Uses the `extracted_text` field of a CDR document for NER tagging
      operationId: cdrAnnotate
      requestBody:
        description: CDR JSON object to annotate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdrDocument'
        required: true
      responses:
        200:
          description: Ran over input CDR successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffsetTagAnnotation'
        400:
          description: Did not follow schema appropriately
          content: {}
        500:
          description: An internal error occurred while processing (e.g. out of memory)
          content: {}
      x-codegen-request-body-name: body
  /annotate:
    post:
      tags:
      - annotate
      summary: Annotate a simple document
      description: Uses the `text` field of a JSON object for NER tagging
      operationId: annotate
      requestBody:
        description: TextInput JSON object to annotate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextInput'
        required: true
      responses:
        200:
          description: ran over inputs successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffsetTagAnnotation'
        400:
          description: Did not follow input schema appropriately
          content: {}
        500:
          description: An internal error occurred while processing (e.g. out of memory)
          content: {}
      x-codegen-request-body-name: body
  /health:
    get:
      tags:
      - health
      summary: Returns status of server
      description: Returns a tuple of `health` to status
      operationId: health
      responses:
        200:
          description: server is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        500:
          description: server is not healthy
          content:
            application/json:
              schema:
                required:
                - status
                type: object
                properties:
                  status:
                    type: string
                    description: error message causing unhealthy status
                    example: failed to load model
components:
  schemas:
    CdrDocument:
      title: CDR Document
      required:
      - content_type
      - document_id
      - extracted_metadata
      - extracted_ntriples
      - source_uri
      - team
      - timestamp
      - uri
      type: object
      properties:
        uri:
          type: string
          description: The RDF subject URI for this CDR document
        source_uri:
          type: string
          description: Relative path to the extracted source file, i.e., filename
            of the raw document
        document_id:
          type: string
          description: Unique document ID based on the MD5 sum of the source file's
            contents
        timestamp:
          pattern: '[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9]\.[0-9]{3}Z'
          type: string
          description: Timestamp when this CDR document was created, in ISO 8601 date
            time format at UTC offset
        team:
          type: string
          description: Team which generated this CDR
        content_type:
          type: string
          description: Detected MIME type of the source file
        extracted_metadata:
          type: object
          properties:
            CreationDate:
              pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
              type: string
            ModDate:
              pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
              type: string
            Author:
              type: string
            Title:
              type: string
            Description:
              type: string
            URL:
              type: string
              description: This metadata field is generally present only in html files
                that include their own source URL as a meta tag in their headers.
                It is not frequently populated.
            Type:
              type: string
            Classification:
              type: string
            Language:
              type: string
            Pages:
              type: integer
            Subject:
              type: string
            Creator:
              type: string
            Producer:
              type: string
          description: Metadata pertaining to the extracted source file. Currently
            this is obtained only from metadata embedded in the raw document, which
            are not always present and can mean different things in different documents,
            depending on how each document is produced
        extracted_ntriples:
          type: string
          description: Reflection of the extracted_metadata in N-Triples format using
            the DataProvenance ODP
        extracted_text:
          type: string
          description: Text extracted from the source document. TA1 offsets start
            at 0 here, beginning at the value of this field (after the opening double
            quote character)
        extracted_numeric:
          type: object
          additionalProperties:
            type: string
          description: Numeric data extracted from a CSV/TSV or Excel document. Key
            names correlate to the sheet name with values matching the contents in
            TSV format.
        annotations:
          type: array
          items:
            type: object
        categories:
          type: array
          description: Keywords or tags for any purpose
          items:
            type: string
    OffsetTagAnnotation:
      type: object
      properties:
        label:
          type: string
        version:
          type: string
        type:
          type: string
        content:
          type: array
          items:
            required:
            - offset_end
            - offset_start
            - tag
            type: object
            properties:
              offset_start:
                type: integer
                description: The index of the first character in extracted_text corresponding
                  to this annotation
              offset_end:
                type: integer
                description: The index of the last character in extracted_text corresponding
                  to this annotation
              value:
                type: string
                description: The substring of extracted_text from offset_start to
                  offset_end
              tag:
                type: string
                description: An identifier corresponding to the text contained in
                  value. All events identified by Qntfy's event analytic are currently
                  tagged as 'B-action'. Qntfy's named entity annotation tags are 'CARDINAL',
                  'DATE', 'EVENT', 'FAC', 'GPE', 'LANGUAGE', 'LAW', 'LOC', 'MONEY',
                  'NORP', 'ORDINAL', 'ORG', 'PERCENT', 'PERSON', 'PRODUCT', 'QUANTITY',
                  'TIME', and 'WORK_OF_ART'. See https://spacy.io/api/annotation to
                  learn more.
      description: An array of annotations, each identified with a specific substring
        of extracted_text. Currently used by Qntfy's event and NER extraction tools.
    TextInput:
      required:
      - text
      type: object
      properties:
        text:
          type: string
          description: Document text to annotate
          example: Greg went to the store to buy his dog, Spark, a new toy
      xml:
        name: TextInput
    Health:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: 'Status of the server: `healthy` if OK, error message if not'
          example: healthy
      xml:
        name: TextInput
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    cdr-v2:
      title: CDR Document
      required:
      - content_type
      - document_id
      - extracted_metadata
      - extracted_ntriples
      - source_uri
      - team
      - timestamp
      - uri
      type: object
      properties:
        uri:
          type: string
          description: The RDF subject URI for this CDR document
        source_uri:
          type: string
          description: Relative path to the extracted source file, i.e., filename
            of the raw document
        document_id:
          type: string
          description: Unique document ID based on the MD5 sum of the source file's
            contents
        timestamp:
          pattern: '[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9]\.[0-9]{3}Z'
          type: string
          description: Timestamp when this CDR document was created, in ISO 8601 date
            time format at UTC offset
        team:
          type: string
          description: Team which generated this CDR
        content_type:
          type: string
          description: Detected MIME type of the source file
        extracted_metadata:
          type: object
          properties:
            CreationDate:
              pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
              type: string
            ModDate:
              pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
              type: string
            Author:
              type: string
            Title:
              type: string
            Description:
              type: string
            URL:
              type: string
              description: This metadata field is generally present only in html files
                that include their own source URL as a meta tag in their headers.
                It is not frequently populated.
            Type:
              type: string
            Classification:
              type: string
            Language:
              type: string
            Pages:
              type: integer
            Subject:
              type: string
            Creator:
              type: string
            Producer:
              type: string
          description: Metadata pertaining to the extracted source file. Currently
            this is obtained only from metadata embedded in the raw document, which
            are not always present and can mean different things in different documents,
            depending on how each document is produced
        extracted_ntriples:
          type: string
          description: Reflection of the extracted_metadata in N-Triples format using
            the DataProvenance ODP
        extracted_text:
          type: string
          description: Text extracted from the source document. TA1 offsets start
            at 0 here, beginning at the value of this field (after the opening double
            quote character)
        extracted_numeric:
          type: object
          additionalProperties:
            type: string
          description: Numeric data extracted from a CSV/TSV or Excel document. Key
            names correlate to the sheet name with values matching the contents in
            TSV format.
        annotations:
          type: array
          items:
            type: object
        categories:
          type: array
          description: Keywords or tags for any purpose
          items:
            type: string
    offset-tag-annotation:
      type: object
      properties:
        label:
          type: string
        version:
          type: string
        type:
          type: string
        content:
          type: array
          items:
            required:
            - offset_end
            - offset_start
            - tag
            type: object
            properties:
              offset_start:
                type: integer
                description: The index of the first character in extracted_text corresponding
                  to this annotation
              offset_end:
                type: integer
                description: The index of the last character in extracted_text corresponding
                  to this annotation
              value:
                type: string
                description: The substring of extracted_text from offset_start to
                  offset_end
              tag:
                type: string
                description: An identifier corresponding to the text contained in
                  value. All events identified by Qntfy's event analytic are currently
                  tagged as 'B-action'. Qntfy's named entity annotation tags are 'CARDINAL',
                  'DATE', 'EVENT', 'FAC', 'GPE', 'LANGUAGE', 'LAW', 'LOC', 'MONEY',
                  'NORP', 'ORDINAL', 'ORG', 'PERCENT', 'PERSON', 'PRODUCT', 'QUANTITY',
                  'TIME', and 'WORK_OF_ART'. See https://spacy.io/api/annotation to
                  learn more.
      description: An array of annotations, each identified with a specific substring
        of extracted_text. Currently used by Qntfy's event and NER extraction tools.
